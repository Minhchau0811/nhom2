@inject NavigationManager navigationManager

<div class="card m-2" style="width: 25rem;">
    <div class="card-body">
        <h5 class="card-title"> Tóm tắt đơn hàng</h5>
        <div class="card-text d-flex justify-content-between">
            <div>
                Sản phẩm (@itemsCount):
            </div>
            <div>
                @itemsTotalPrice.ToString("c")
            </div>
        </div>
        <div class="card-text d-flex justify-content-between">
            <div>
                Phí vận chuyển:
            </div>
            <div>
                <text>$0.00</text>
            </div>
        </div>
        <div class="card-text d-flex justify-content-between">
            <div>
                Thuế ước tính:
            </div>
            <div>
                <text>$0.00</text>
            </div>
        </div>
        <hr />
        <div class="card-text d-flex justify-content-between" style="color:darkred">
            <div>
                <b>Tổng tiền:</b>
            </div>
            <div>
                <b>@itemsTotalPrice.ToString("c")</b>
            </div>
        </div>

    </div>
   
</div>
<div class="col">
    @if (!HidePlaceOrder)
    {
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ShoppingCartCheckout" Color="Color.Error" @onclick="PlaceOrder">Mua hàng</MudButton>
    }
</div>


@code {
    int itemsCount = 0;
    double itemsTotalPrice = 0;

    [Parameter]
    public Order order { get; set; }

    [Parameter]
    public bool HidePlaceOrder { get; set; } = false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if(order != null)
        {
            itemsCount = order.LineItems.Count;
            itemsTotalPrice = 0;
            order.LineItems.ForEach(x => itemsTotalPrice += x.Price * x.Quantity);
        }
    }
    private void PlaceOrder()
    {
        navigationManager.NavigateTo("/placeorder");
    }
}
